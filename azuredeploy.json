{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Username for the Virtual Machine."
      },
      "defaultValue": "azureuser"
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "remoteAccessACL": {
      "type": "string",
      "metadata": {
        "description": "Remote Access CIDR"
      },
      "defaultValue": "Internet"
    },
    "rdpPort": {
      "type": "int",
      "defaultValue": 50001,
      "metadata": {
        "description": "Public port number for RDP"
      }
    },
    "publisher": {
      "type": "string",
      "defaultValue": "microsoftvisualstudio",
      "allowedValues": [
        "microsoftvisualstudio"
      ]
    },
    "offer": {
      "type": "string",
      "defaultValue": "visualstudio2019latest",
      "allowedValues": [
        "visualstudio2019latest"
      ]
    },
    "sku": {
      "type": "string",
      "defaultValue": "vs-2019-comm-latest-win11-n",
      "allowedValues": [
        "vs-2019-comm-latest-win11-n"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version."
      }
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "The base URI where desired setup script is located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      },
      "defaultValue": "https://raw.githubusercontent.com/danielscholl/hol-win11/master/"
    },
    "script": {
      "type": "string",
      "defaultValue": "setup.ps1",
      "metadata": {
        "description": "The name of the powershell script to execute"
      }
    }
  },
  "variables": {
    "storageAccountName": "[format('bootdiags{0}', uniqueString(resourceGroup().id))]",
    "kvName": "[format('lab', uniqueString(resourceGroup().id))]",
    "keyName": "encryptionkey",
    "diskencsetName": "diskEncryption",
    "kvId": "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]",
    "networkSecurityGroupName": "lab-nsg",
    "nicName": "lab-nic",
    "loadBalancerName": "lab-lb",
    "addressPrefix": "192.168.1.0/24",
    "subnetName": "Subnet",
    "subnetPrefix": "192.168.1.0/24",
    "subnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]",
    "vmName": "lab",
    "virtualNetworkName": "lab-vnet",
    "publicIPAddressName": "lab-ip",
    "scriptFolder": "."
  },
  "resources": [
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2021-10-01",
      "name": "[variables('kvName')]",
      "location": "[parameters('location')]",
      "properties": {
        "enableRbacAuthorization": false,
        "enableSoftDelete": true,
        "enablePurgeProtection": true,
        "enabledForDeployment": true,
        "enabledForDiskEncryption": true,
        "enabledForTemplateDeployment": true,
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [
        ],
        "sku": {
          "name": "Standard",
          "family": "A"
        },
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/keys",
      "apiVersion": "2021-10-01",
      "name": "[concat(variables('kvName'), '/', variables('keyName'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]"
      ],
      "properties": {
        "kty": "RSA",
        "keySize": 4096
      }
    },
    {
      "type": "Microsoft.Compute/diskEncryptionSets",
      "apiVersion": "2021-12-01",
      "name": "[variables('diskencsetName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults/keys', variables('kvName'), variables('keyName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "activeKey": {
          "sourceVault": {
            "id": "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]"
          },
          "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', variables('kvName'), variables('keyName')), '2021-10-01', 'Full').properties.keyUriWithVersion]"
        }
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults/accessPolicies",
      "apiVersion": "2021-10-01",
      "name": "[concat(variables('kvName'), '/add')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/diskEncryptionSets', variables('diskencsetName'))]"
      ],
      "properties": {
        "accessPolicies": [
          {
            "tenantId": "[subscription().tenantId]",
            "objectId": "[reference(resourceId('Microsoft.Compute/diskEncryptionSets', variables('diskencsetName')), '2021-12-01', 'Full').identity.PrincipalId]",
            "permissions": {
              "keys": [
                "Get",
                "WrapKey",
                "UnwrapKey"
              ],
              "secrets": [],
              "certificates": []
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-09-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
      ],
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {
        "accountType": "Standard_LRS",
        "networkAcls": {
          "bypass": "None",
          "virtualNetworkRules": [
            {
              "id": "[variables('subnetRef')]",
              "action": "Allow"
            }
          ],
          "defaultAction": "Deny"
        }
      }
    },
    {
      "apiVersion": "2021-02-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-02-01",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "default-allow-3389",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "destinationPortRange": "3389",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "sourceAddressPrefix": "[parameters('remoteAccessACL')]",
              "destinationAddressPrefix": "*"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2020-05-01",
      "name": "[variables('loadBalancerName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "LBFE",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "LBBAP"
          }
        ],
        "inboundNatRules": [
          {
            "name": "rdp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), 'LBFE')]"
              },
              "protocol": "Tcp",
              "frontendPort": "[parameters('rdpPort')]",
              "backendPort": 3389,
              "enableFloatingIP": false
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-02-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Storage"
                }
              ],
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-02-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "loadBalancerBackendAddressPools": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), 'LBBAP')]"
                }
              ],
              "loadBalancerInboundNatRules": [
                {
                  "id": "[resourceId('Microsoft.Network/loadBalancers/inboundNatRules', variables('loadBalancerName'), 'rdp')]"
                }
              ]
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2021-03-01",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D4s_v3"
        },
        "osProfile": {
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[parameters('publisher')]",
            "offer": "[parameters('offer')]",
            "sku": "[parameters('sku')]",
            "version": "latest"
          },
          "osDisk": {
            "createOption": "FromImage",
            "diskSizeGB": 2048
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))).primaryEndpoints.blob]"
          }
        }
      },
      "resources": [
        {
          "apiVersion": "[providers('Microsoft.DevTestLab','labs').apiVersions[0]]",
          "type": "microsoft.devtestlab/schedules",
          "name": "[concat('shutdown-computevm-',variables('vmName'))]",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/',concat(variables('vmName')))]"
          ],
          "properties": {
            "status": "Enabled",
            "taskType": "ComputeVmShutdownTask",
            "dailyRecurrence": {
              "time": "1900"
            },
            "timeZoneId": "Central Standard Time",
            "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
            },
            "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines',concat(variables('vmName')))]"
          }
        },
        {
          "name": "CustomScriptExtension",
          "type": "extensions",
          "location": "[resourceGroup().location]",
          "apiVersion": "2017-12-01",
          "dependsOn": [
            "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
          ],
          "tags": {
            "displayName": "Install LabVM Applications"
          },
          "properties": {
            "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "autoUpgradeMinorVersion": true,
            "settings": {
              "fileUris": [
                "[concat(parameters('_artifactsLocation'), parameters('script'))]"
              ],
              "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -File ', variables('scriptFolder'), '/', parameters('script'))]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {

  }
}
